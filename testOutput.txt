datatype 'a inflist = CONS of 'a * (unit -> 'a inflist) | NIL
val HD = fn : 'a inflist -> 'a
val TL = fn : 'a inflist -> 'a inflist
val NULL = fn : 'a inflist -> bool
val FILTER = fn : ('a -> bool) -> 'a inflist -> 'a inflist
val TAKE = fn : 'a inflist * int -> 'a list
val even = fn : int -> bool
val odd = fn : int -> bool
val fib = fn : int -> int -> int inflist
val fibs = CONS (0,fn) : int inflist
val evenFibs = CONS (0,fn) : int inflist
val oddFibs = CONS (1,fn) : int inflist
val printGenList = fn : ('a -> 'b) -> 'a list -> unit
val printList = fn : int list -> unit
val printPairList = fn : (int * int) list -> unit
val ZIP = fn : 'a inflist * 'b inflist -> ('a * 'b) inflist
0 1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 val it = () : unit
0 2 8 34 144 610 2584 10946 46368 196418 val it = () : unit
1 1 3 5 13 21 55 89 233 377 val it = () : unit
(0, 1) (2, 1) (8, 3) (34, 5) (144, 13) (610, 21) (2584, 55) (10946, 89) (46368, 233) (196418, 377) val it = () : unit
val it = () : unit